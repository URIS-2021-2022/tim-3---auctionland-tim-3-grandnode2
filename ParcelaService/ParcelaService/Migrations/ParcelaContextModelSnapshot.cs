// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParcelaService.Entities;

namespace ParcelaService.Migrations
{
    [DbContext(typeof(ParcelaContext))]
    partial class ParcelaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParcelaService.Entities.DeoParcele", b =>
                {
                    b.Property<Guid>("DeoParceleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KvalitetZemljistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParcelaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PovrsinaDelaParcele")
                        .HasColumnType("int");

                    b.Property<int>("RedniBrojDelaParcele")
                        .HasColumnType("int");

                    b.HasKey("DeoParceleId");

                    b.HasIndex("KvalitetZemljistaId");

                    b.HasIndex("ParcelaId");

                    b.ToTable("DeloviParcele");

                    b.HasData(
                        new
                        {
                            DeoParceleId = new Guid("70037ed2-cefc-498c-8a04-819d1bbd415b"),
                            KvalitetZemljistaId = new Guid("b767f876-7462-40d7-918e-e32472e8e07f"),
                            ParcelaId = new Guid("7e2bc8e2-a0dc-4b45-8068-8bb3a9ec9605"),
                            PovrsinaDelaParcele = 300,
                            RedniBrojDelaParcele = 1
                        },
                        new
                        {
                            DeoParceleId = new Guid("45504801-01fa-4054-9601-1bb7216f22f6"),
                            KvalitetZemljistaId = new Guid("0943c9e9-2dc0-4d8a-92a4-4c0d7297c8f1"),
                            ParcelaId = new Guid("f97960ee-b9f2-4910-9faa-d5bd81998f4f"),
                            PovrsinaDelaParcele = 300,
                            RedniBrojDelaParcele = 2
                        });
                });

            modelBuilder.Entity("ParcelaService.Entities.DozvoljeniRad", b =>
                {
                    b.Property<Guid>("DozvoljeniRadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ZasticenaZonaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DozvoljeniRadId");

                    b.HasIndex("ZasticenaZonaId");

                    b.ToTable("DozvoljeniRadovi");

                    b.HasData(
                        new
                        {
                            DozvoljeniRadId = new Guid("9dcc4f86-da91-4767-8256-20e865406e60"),
                            Opis = "Sed mattis, risus id tincidunt commodo, dui massa fermentum libero.",
                            ZasticenaZonaId = new Guid("80a231c2-f454-4bb9-bc55-df65440ef57e")
                        },
                        new
                        {
                            DozvoljeniRadId = new Guid("bb7617ab-eb3e-4e67-a19e-49cdd2e4e4ef"),
                            Opis = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. ",
                            ZasticenaZonaId = new Guid("da357d41-7086-49dc-857c-17ee3085f46f")
                        });
                });

            modelBuilder.Entity("ParcelaService.Entities.KvalitetZemljista", b =>
                {
                    b.Property<Guid>("KvalitetZemljistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OznakaKvaliteta")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("KvalitetZemljistaId");

                    b.ToTable("KvalitetiZemljista");

                    b.HasData(
                        new
                        {
                            KvalitetZemljistaId = new Guid("0943c9e9-2dc0-4d8a-92a4-4c0d7297c8f1"),
                            Opis = "Los kvalitet",
                            OznakaKvaliteta = "LK"
                        },
                        new
                        {
                            KvalitetZemljistaId = new Guid("b767f876-7462-40d7-918e-e32472e8e07f"),
                            Opis = "Dobar kvalitet",
                            OznakaKvaliteta = "DK"
                        });
                });

            modelBuilder.Entity("ParcelaService.Entities.Parcela", b =>
                {
                    b.Property<Guid>("ParcelaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojListaNepokretnosti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojParcele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("KatastarskaOpstinaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Klasa")
                        .HasColumnType("int");

                    b.Property<string>("KlasaStvarnoStanje")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Kultura")
                        .HasColumnType("int");

                    b.Property<string>("KulturaStvarnoStanje")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OblikSvojine")
                        .HasColumnType("int");

                    b.Property<int>("Obradivost")
                        .HasColumnType("int");

                    b.Property<string>("ObradivostStvarnoStanje")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Odvodnjavanje")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OdvodnjavanjeStvarnoStanje")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ZasticenaZonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZasticenaZonaStvarnoStanje")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ParcelaId");

                    b.HasIndex("ZasticenaZonaId");

                    b.ToTable("Parcele");

                    b.HasData(
                        new
                        {
                            ParcelaId = new Guid("7e2bc8e2-a0dc-4b45-8068-8bb3a9ec9605"),
                            BrojListaNepokretnosti = "111",
                            BrojParcele = "111",
                            KatastarskaOpstinaId = new Guid("1b411c13-a295-48f7-8dbd-67886c3974c0"),
                            Klasa = 1,
                            Kultura = 4,
                            OblikSvojine = 3,
                            Obradivost = 0,
                            ZasticenaZonaId = new Guid("80a231c2-f454-4bb9-bc55-df65440ef57e")
                        },
                        new
                        {
                            ParcelaId = new Guid("f97960ee-b9f2-4910-9faa-d5bd81998f4f"),
                            BrojListaNepokretnosti = "222",
                            BrojParcele = "222",
                            KatastarskaOpstinaId = new Guid("6b411c13-a295-48f7-8dbd-67886c3974c0"),
                            Klasa = 1,
                            Kultura = 5,
                            OblikSvojine = 0,
                            Obradivost = 0,
                            ZasticenaZonaId = new Guid("da357d41-7086-49dc-857c-17ee3085f46f")
                        });
                });

            modelBuilder.Entity("ParcelaService.Entities.ZasticenaZona", b =>
                {
                    b.Property<Guid>("ZasticenaZonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BrojZasticeneZone")
                        .HasColumnType("int");

                    b.HasKey("ZasticenaZonaId");

                    b.ToTable("ZasticeneZone");

                    b.HasData(
                        new
                        {
                            ZasticenaZonaId = new Guid("80a231c2-f454-4bb9-bc55-df65440ef57e"),
                            BrojZasticeneZone = 1
                        },
                        new
                        {
                            ZasticenaZonaId = new Guid("da357d41-7086-49dc-857c-17ee3085f46f"),
                            BrojZasticeneZone = 2
                        });
                });

            modelBuilder.Entity("ParcelaService.Entities.DeoParcele", b =>
                {
                    b.HasOne("ParcelaService.Entities.KvalitetZemljista", "KvalitetZemljista")
                        .WithMany()
                        .HasForeignKey("KvalitetZemljistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelaService.Entities.Parcela", "Parcela")
                        .WithMany("DeloviParcele")
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KvalitetZemljista");

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("ParcelaService.Entities.DozvoljeniRad", b =>
                {
                    b.HasOne("ParcelaService.Entities.ZasticenaZona", "ZasticenaZona")
                        .WithMany("DozvoljeniRadovi")
                        .HasForeignKey("ZasticenaZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZasticenaZona");
                });

            modelBuilder.Entity("ParcelaService.Entities.Parcela", b =>
                {
                    b.HasOne("ParcelaService.Entities.ZasticenaZona", "ZasticenaZona")
                        .WithMany()
                        .HasForeignKey("ZasticenaZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZasticenaZona");
                });

            modelBuilder.Entity("ParcelaService.Entities.Parcela", b =>
                {
                    b.Navigation("DeloviParcele");
                });

            modelBuilder.Entity("ParcelaService.Entities.ZasticenaZona", b =>
                {
                    b.Navigation("DozvoljeniRadovi");
                });
#pragma warning restore 612, 618
        }
    }
}
